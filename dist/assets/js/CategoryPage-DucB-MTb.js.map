{"version":3,"file":"CategoryPage-DucB-MTb.js","sources":["../../../src/pages/CategoryPage.jsx","../../../src/hooks/useCategory.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useMemo } from \"react\"; // Added useMemo\nimport { useParams, Link } from \"react-router-dom\";\nimport { useProduct } from \"../hooks/useProduct.jsx\";\nimport useCategory from \"../hooks/useCategory\";\nimport ProductFilter from \"../components/product/ProductFilter.jsx\";\nimport ProductCard from \"../components/product/ProductCard.jsx\";\nimport LoadingSpinner from \"../components/ui/LoadingSpinner.jsx\";\nimport Seo from \"../components/Seo/seo\";\n\nfunction CategoryPage() {\n  const { slug } = useParams();\n  const {\n    getProductsByCategory,\n    getProductFilters,\n    // productFilters, // This state seems to be for all filters, categoryAggregations is used for category-specific\n    contextLoading,\n    contextError,\n  } = useProduct();\n\n  const {\n    currentCategory,\n    loadCategoryByUrlKey,\n    getCategoryBreadcrumbs,\n    loading: categoryDetailsLoading,\n    error: categoryDetailsError,\n  } = useCategory();\n\n  const [displayedProducts, setDisplayedProducts] = useState([]);\n  const [categoryAggregations, setCategoryAggregations] = useState([]);\n  const [appliedFilters, setAppliedFilters] = useState({});\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\n  const [childCategories, setChildCategories] = useState([]);\n  const [sortOption, setSortOption] = useState(\"position\");\n  const [sortDirection, setSortDirection] = useState(\"ASC\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(12);\n  const [totalProducts, setTotalProducts] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingpop, setLoadingpop] = useState(false);\n\n  useEffect(() => {\n    const fetchInitialCategoryData = async () => {\n      if (!slug) return;\n      setLoadingpop(true);\n      const category = await loadCategoryByUrlKey(slug);\n      if (category && category.id) {\n        const filters = await getProductFilters(category.id);\n        setCategoryAggregations(filters || []);\n        const breadcrumbData = await getCategoryBreadcrumbs(category.id);\n        setBreadcrumbs(breadcrumbData || []);\n        if (category.children_data) {\n          setChildCategories(category.children_data);\n        }\n      }\n      // setLoadingpop(false); // Moved to fetchCategoryProducts finally block\n    };\n    fetchInitialCategoryData();\n  }, [slug, loadCategoryByUrlKey, getProductFilters, getCategoryBreadcrumbs]);\n\n  useEffect(() => {\n    setDisplayedProducts([]);\n    setCurrentPage(1);\n    setHasMore(true);\n  }, [slug, appliedFilters, sortOption, sortDirection]);\n\n  const attributeFilterGroups = useMemo(() => {\n    return Object.entries(appliedFilters)\n      .filter(([, values]) => values.length > 0)\n      .map(([attributeCode, values]) => {\n        if (attributeCode === \"price\") {\n          if (values.length > 0) {\n            const priceValue = values[0];\n            const [from, to] = priceValue.split(\"_\");\n            const priceFilter = { field: \"price\" };\n            if (from && from !== \"*\") priceFilter.from = from;\n            if (to && to !== \"*\") priceFilter.to = to;\n            return { filters: [priceFilter] };\n          }\n          return null;\n        } else {\n          return {\n            filters: values.map((value) => ({\n              field: attributeCode,\n              value: value,\n              condition_type: \"in\",\n            })),\n          };\n        }\n      })\n      .filter((group) => group !== null);\n  }, [appliedFilters]);\n\n  const fetchCategoryProducts = useCallback(async () => {\n    setLoadingpop(true);\n    if (!currentCategory || !currentCategory.id) {\n      setLoadingpop(false);\n      return;\n    }\n\n    const searchCriteriaForCategory = {\n      currentPage,\n      pageSize,\n      sortField: sortOption,\n      sortDirection,\n      filterGroups: attributeFilterGroups,\n    };\n\n    try {\n      const data = await getProductsByCategory(\n        currentCategory.id,\n        searchCriteriaForCategory\n      );\n      setDisplayedProducts(data.items || []);\n      setTotalProducts(data.total_count || 0);\n      const calculatedTotalPages = Math.ceil(\n        (data.total_count || 0) / pageSize\n      );\n      setHasMore(currentPage < calculatedTotalPages);\n    } catch (err) {\n      console.error(\"Error fetching category products:\", err);\n    } finally {\n      setLoadingpop(false);\n    }\n  }, [\n    currentCategory,\n    currentPage,\n    pageSize,\n    sortOption,\n    sortDirection,\n    attributeFilterGroups,\n    getProductsByCategory,\n  ]);\n\n  useEffect(() => {\n    if (currentCategory) {\n      fetchCategoryProducts();\n    }\n  }, [fetchCategoryProducts, currentCategory]);\n\n  useEffect(() => {\n    if (displayedProducts.length > 0) {\n      const firstProduct = displayedProducts[0];\n      const lcpImageUrl =\n        firstProduct?.image?.url ||\n        firstProduct?.small_image?.url ||\n        firstProduct?.thumbnail?.url;\n      if (lcpImageUrl) {\n        const preloadLink = document.getElementById(\"lcp-image-preload\");\n        if (preloadLink) {\n          preloadLink.href = lcpImageUrl;\n        }\n      }\n    }\n  }, [displayedProducts]);\n\n  const handleFilterChange = useCallback((attributeCode, newValues) => {\n    setAppliedFilters((prev) => {\n      const updatedFilters = { ...prev };\n      if (newValues.length === 0) {\n        delete updatedFilters[attributeCode];\n      } else {\n        updatedFilters[attributeCode] = newValues;\n      }\n      return updatedFilters;\n    });\n    // setCurrentPage(1); // This is handled by the useEffect watching appliedFilters\n  }, []);\n\n  const handleSortChange = useCallback((e) => {\n    const value = e.target.value;\n    if (value.includes(\"_\")) {\n      const [field, direction] = value.split(\"_\");\n      setSortOption(field);\n      setSortDirection(direction.toUpperCase());\n    } else {\n      setSortOption(value);\n      setSortDirection(\"ASC\");\n    }\n    // setCurrentPage(1); // This is handled by the useEffect watching sortOption/sortDirection\n  }, []);\n\n  const handlePageChange = useCallback((newPage) => {\n    setCurrentPage(newPage);\n    window.scrollTo(0, 0);\n  }, []);\n\n  const isLoadingInitial = contextLoading || (categoryDetailsLoading && !currentCategory);\n  const displayError = contextError || categoryDetailsError;\n\n  if (isLoadingInitial && !currentCategory) { // Initial load for category details\n    return <LoadingSpinner />;\n  }\n\n  if (displayError && !currentCategory) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          <p>{displayError.message || \"An error occurred loading category details.\"}</p>\n          <p className=\"mt-2\">\n            <Link to=\"/\" className=\"text-indigo-600 hover:underline\">\n              Return to homepage\n            </Link>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!currentCategory && !isLoadingInitial) { // Category not found after attempting to load\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded\">\n          <p>Category not found.</p>\n          <p className=\"mt-2\">\n            <Link to=\"/\" className=\"text-indigo-600 hover:underline\">\n              Return to homepage\n            </Link>\n          </p>\n        </div>\n      </div>\n    );\n  }\n  \n  // Loading state for products specifically, after category details are loaded\n  if (loadingpop && displayedProducts.length === 0 && currentCategory) {\n      return <LoadingSpinner />;\n  }\n\n\n  const totalPages = Math.ceil(totalProducts / pageSize);\n\n  return (\n    <>\n      <Seo\n        title={currentCategory?.name || \"Category Products\"}\n        description={currentCategory?.description || \"Browse products in this category.\"}\n        keywords={currentCategory?.meta_keywords || \"\"}\n        ogTitle={currentCategory?.name || \"Category Products\"}\n        ogDescription={currentCategory?.description || \"Browse products in this category.\"}\n        ogImage={currentCategory?.image || \"\"}\n        ogUrl={`${window.location.origin}${location.pathname}`}\n      />\n\n      <div className=\"container mx-auto px-4 py-8\">\n        <nav className=\"mb-6\">\n          <ol className=\"flex flex-wrap text-sm\">\n            <li className=\"flex items-center\">\n              <Link to=\"/\" className=\"text-gray-600 hover:text-indigo-600\">\n                Home\n              </Link>\n              <span className=\"mx-2 text-gray-400\">/</span>\n            </li>\n            {breadcrumbs.map((crumb, index) => (\n              <li key={crumb.id} className=\"flex items-center\">\n                {index === breadcrumbs.length - 1 ? (\n                  <span className=\"text-indigo-600\">{crumb.name}</span>\n                ) : (\n                  <>\n                    <Link\n                      to={crumb.url}\n                      className=\"text-gray-600 hover:text-indigo-600\"\n                    >\n                      {crumb.name}\n                    </Link>\n                    <span className=\"mx-2 text-gray-400\">/</span>\n                  </>\n                )}\n              </li>\n            ))}\n          </ol>\n        </nav>\n\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-4\">{currentCategory?.name}</h1>\n          {currentCategory?.description && (\n            <div\n              className=\"text-gray-600 mb-4\"\n              dangerouslySetInnerHTML={{ __html: currentCategory.description }}\n            />\n          )}\n        </div>\n\n        {childCategories.length > 0 && (\n          <div className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold mb-4\">Subcategories</h2>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              {childCategories.map((child) => (\n                <Link\n                  key={child.id}\n                  to={`/category/${child.url_key || child.id}`}\n                  className=\"bg-gray-100 hover:bg-gray-200 rounded-lg p-4 text-center transition\"\n                >\n                  <div className=\"font-medium\">{child.name}</div>\n                  {child.product_count && (\n                    <div className=\"text-sm text-gray-600 mt-1\">\n                      {child.product_count} products\n                    </div>\n                  )}\n                </Link>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex flex-col md:flex-row gap-8\">\n          <aside className=\"w-full md:w-1/4\">\n            {categoryAggregations.length > 0 && (\n              <ProductFilter\n                filters={categoryAggregations}\n                appliedFilters={appliedFilters}\n                onFilterChange={handleFilterChange}\n              />\n            )}\n          </aside>\n          <main className=\"w-full md:w-3/4\">\n            <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6\">\n              <div className=\"mb-4 sm:mb-0\">\n                <p className=\"text-gray-600\">\n                  Showing {displayedProducts.length} of {totalProducts} products\n                </p>\n              </div>\n              <div className=\"flex items-center\">\n                <label htmlFor=\"sort\" className=\"mr-2 text-gray-600\">\n                  Sort by:\n                </label>\n                <select\n                  id=\"sort\"\n                  className=\"border rounded p-2 focus:outline-none focus:ring-2 focus:ring-indigo-600\"\n                  value={`${sortOption}_${sortDirection}`}\n                  onChange={handleSortChange}\n                >\n                  <option value=\"position_ASC\">Position</option>\n                  <option value=\"name_ASC\">Name (A-Z)</option>\n                  <option value=\"name_DESC\">Name (Z-A)</option>\n                  <option value=\"price_ASC\">Price (Low to High)</option>\n                  <option value=\"price_DESC\">Price (High to Low)</option>\n                  <option value=\"created_at_DESC\">Newest</option>\n                </select>\n              </div>\n            </div>\n\n            {/* Product Grid Logic */}\n            {loadingpop && displayedProducts.length === 0 ? ( // Show spinner if loading and no products yet\n              <div className=\"flex justify-center items-center h-64\">\n                <LoadingSpinner />\n              </div>\n            ) : !loadingpop && displayError && displayedProducts.length === 0 ? ( // Show error if loading failed and no products\n              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n                <p>{displayError.message || \"Could not load products.\"}</p>\n              </div>\n            ) : !loadingpop && displayedProducts.length > 0 ? ( // Show products if loaded\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {displayedProducts.map((product, index) => (\n                  <ProductCard\n                    key={product.id || `product-item-${index}`}\n                    product={product}\n                    isLCPCandidate={index === 0 && currentPage === 1}\n                  />\n                ))}\n              </div>\n            ) : !loadingpop && !displayError && displayedProducts.length === 0 && totalProducts === 0 ? ( // No products found\n              <div className=\"bg-gray-100 p-8 text-center rounded-lg\">\n                <p className=\"text-gray-600\">\n                  No products found matching your criteria.\n                </p>\n              </div>\n            ) : null}\n\n\n            {loadingpop && displayedProducts.length > 0 && (\n              <div className=\"flex justify-center my-8\">\n                <LoadingSpinner />\n              </div>\n            )}\n            {!loadingpop && displayedProducts.length > 0 && !hasMore && totalProducts > 0 && (\n              <p className=\"text-center text-gray-500 my-8\">\n                You've reached the end of the results.\n              </p>\n            )}\n\n            {totalPages > 1 && (\n              <div className=\"mt-8 flex justify-center\">\n                <nav className=\"flex items-center\">\n                  <button\n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={currentPage === 1 || loadingpop}\n                    className={`mx-1 px-3 py-1 rounded ${\n                      currentPage === 1 || loadingpop\n                        ? \"bg-gray-200 text-gray-500 cursor-not-allowed\"\n                        : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\n                    }`}\n                  >\n                    Previous\n                  </button>\n\n                  {[...Array(totalPages)].map((_, index) => {\n                    const pageNum = index + 1;\n                    if (\n                      pageNum === 1 ||\n                      pageNum === totalPages ||\n                      (pageNum >= currentPage - 1 && pageNum <= currentPage + 1)\n                    ) {\n                      return (\n                        <button\n                          key={pageNum}\n                          onClick={() => handlePageChange(pageNum)}\n                          disabled={loadingpop}\n                          className={`mx-1 px-3 py-1 rounded ${\n                            currentPage === pageNum\n                              ? \"bg-indigo-600 text-white\"\n                              : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\n                          } ${loadingpop ? \"cursor-not-allowed opacity-50\" : \"\"}`}\n                        >\n                          {pageNum}\n                        </button>\n                      );\n                    } else if (\n                      (pageNum === currentPage - 2 && currentPage > 3) ||\n                      (pageNum === currentPage + 2 && currentPage < totalPages - 2)\n                    ) {\n                      return (\n                        <span key={pageNum} className=\"mx-1\">\n                          ...\n                        </span>\n                      );\n                    }\n                    return null;\n                  })}\n\n                  <button\n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={currentPage === totalPages || loadingpop}\n                    className={`mx-1 px-3 py-1 rounded ${\n                      currentPage === totalPages || loadingpop\n                        ? \"bg-gray-200 text-gray-500 cursor-not-allowed\"\n                        : \"bg-gray-200 text-gray-700 hover:bg-gray-300\"\n                    }`}\n                  >\n                    Next\n                  </button>\n                </nav>\n              </div>\n            )}\n          </main>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CategoryPage;\n","import { useState, useCallback, useRef } from \"react\";\nimport * as categoryApi from \"../api/category\";\n\n/**\n * Custom hook for working with categories\n */\nexport const useCategory = () => {\n  const [categories, setCategories] = useState([]);\n  const [categoryTree, setCategoryTree] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentCategory, setCurrentCategory] = useState(null);\n  const [categoryProducts, setCategoryProducts] = useState({\n    items: [],\n    total_count: 0,\n  });\n  const [productFilters, setProductFilters] = useState([]);\n  const [cachedCategoryDetails, setCachedCategoryDetails] = useState({}); // Cache for category details by URL key\n  const [cachedBreadcrumbs, setCachedBreadcrumbs] = useState({}); // Cache for breadcrumbs by category ID\n\n\n  // Use refs to store the latest state values without causing re-renders\n  const stateRef = useRef({\n    categories,\n    categoryTree,\n    loading,\n    error,\n    currentCategory,\n    categoryProducts,\n    productFilters,\n    cachedCategoryDetails, // Add to ref\n    cachedBreadcrumbs,   // Add to ref\n  });\n\n  // Update refs when state changes\n  stateRef.current = {\n    categories,\n    categoryTree,\n    loading,\n    error,\n    currentCategory,\n    categoryProducts,\n    productFilters,\n    cachedCategoryDetails, // Update in ref\n    cachedBreadcrumbs,   // Update in ref\n  };\n\n  /**\n   * Load all categories\n   */\n  const loadCategories = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await categoryApi.getAllCategories();\n      const items = data.items || [];\n      setCategories(items);\n      return items;\n    } catch (err) {\n      setError(err.message || \"Failed to load categories\");\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []); // Empty dependency array to ensure stable reference\n\n  /**\n   * Load category tree\n   * @param {number} rootCategoryId - Root category ID\n   */\n  const loadCategoryTree = useCallback(async (rootCategoryId = 2) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await categoryApi.getCategoryTree(rootCategoryId);\n      setCategoryTree(data);\n      return data;\n    } catch (err) {\n      setError(err.message || \"Failed to load category tree\");\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Load category by ID\n   * @param {number} categoryId - Category ID\n   */\n  const loadCategoryById = useCallback(async (categoryId) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await categoryApi.getCategoryById(categoryId);\n      setCurrentCategory(data);\n      return data;\n    } catch (err) {\n      setError(err.message || `Failed to load category ${categoryId}`);\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Load category by URL key/slug\n   * @param {string} urlKey - Category URL key or slug\n   */\n  const loadCategoryByUrlKey = useCallback(async (urlKey) => {\n    setLoading(true);\n    setError(null);\n\n    if (stateRef.current.cachedCategoryDetails[urlKey]) {\n      const cachedData = stateRef.current.cachedCategoryDetails[urlKey];\n      setCurrentCategory(cachedData);\n      setLoading(false);\n      return cachedData;\n    }\n\n    try {\n      const data = await categoryApi.getCategoryByUrlKey(urlKey);\n      if (data) {\n        setCachedCategoryDetails(prev => ({ ...prev, [urlKey]: data }));\n        setCurrentCategory(data);\n      } else {\n        // If API returns null/undefined (e.g. category not found),\n        // still set currentCategory to null to reflect this.\n        setCurrentCategory(null);\n      }\n      return data;\n    } catch (err) {\n      setError(err.message || `Failed to load category ${urlKey}`);\n      setCurrentCategory(null); // Ensure currentCategory is reset on error\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  }, [setCachedCategoryDetails, setCurrentCategory, setLoading, setError]); // Dependencies updated\n\n  /**\n   * Load products for a category\n   * @param {number|string} categoryIdentifier - Category ID or URL key\n   * @param {Object} options - Search options\n   */\n  const loadCategoryProducts = useCallback(\n    async (categoryIdentifier, options = {}) => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        let data;\n\n        if (typeof categoryIdentifier === \"number\") {\n          data = await categoryApi.getProductsByCategory(\n            categoryIdentifier,\n            options\n          );\n        } else {\n          data = await categoryApi.getProductsByCategoryUrlKey(\n            categoryIdentifier,\n            options\n          );\n        }\n\n        setCategoryProducts(data);\n        return data;\n      } catch (err) {\n        setError(\n          err.message ||\n            `Failed to load products for category ${categoryIdentifier}`\n        );\n        return { items: [], total_count: 0 };\n      } finally {\n        setLoading(false);\n      }\n    },\n    []\n  );\n\n  /**\n   * Load child categories\n   * @param {number} parentId - Parent category ID\n   */\n  const loadChildCategories = useCallback(async (parentId) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await categoryApi.getChildCategories(parentId);\n      return data.items || [];\n    } catch (err) {\n      setError(\n        err.message || `Failed to load child categories for ${parentId}`\n      );\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Load category filters\n   * @param {number} categoryId - Category ID\n   */\n  const loadCategoryFilters = useCallback(async (categoryId) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await categoryApi.getCategoryFilters(categoryId);\n      setProductFilters(data);\n      return data;\n    } catch (err) {\n      setError(\n        err.message || `Failed to load filters for category ${categoryId}`\n      );\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Load featured categories\n   * @param {number} limit - Maximum number of categories\n   */\n  const loadFeaturedCategories = useCallback(async (limit = 10) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await categoryApi.getFeaturedCategories(limit);\n      return data.items || [];\n    } catch (err) {\n      setError(err.message || \"Failed to load featured categories\");\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Search categories\n   * @param {string} searchTerm - Search term\n   * @param {number} limit - Maximum number of results\n   */\n  const searchCategoriesByName = useCallback(async (searchTerm, limit = 20) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const data = await categoryApi.searchCategories(searchTerm, limit);\n      return data.items || [];\n    } catch (err) {\n      setError(\n        err.message || `Failed to search categories for \"${searchTerm}\"`\n      );\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Get breadcrumbs for a category\n   * @param {number} categoryId - Category ID\n   */\n  const getCategoryBreadcrumbs = useCallback(async (categoryId) => {\n    setLoading(true);\n    setError(null);\n\n    if (stateRef.current.cachedBreadcrumbs[categoryId]) {\n      setLoading(false);\n      return stateRef.current.cachedBreadcrumbs[categoryId];\n    }\n\n    try {\n      const pathCategories = await categoryApi.getCategoryPath(categoryId);\n      const breadcrumbsData = pathCategories.map((cat) => ({\n        id: cat.id,\n        name: cat.name,\n        url: `/category/${cat.url_key || cat.id}`,\n      }));\n      if (breadcrumbsData.length > 0) { // Only cache if we got valid breadcrumbs\n        setCachedBreadcrumbs(prev => ({ ...prev, [categoryId]: breadcrumbsData }));\n      }\n      return breadcrumbsData;\n    } catch (err) {\n      setError(\n        err.message || `Failed to get breadcrumbs for category ${categoryId}`\n      );\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, [setCachedBreadcrumbs, setLoading, setError]); // Dependencies updated\n\n  // Clear error utility function\n  const clearError = useCallback(() => setError(null), []);\n\n  return {\n    // State\n    categories,\n    categoryTree,\n    loading,\n    error,\n    currentCategory,\n    categoryProducts,\n    productFilters,\n    // Expose caches if needed for debugging or direct manipulation (optional)\n    // cachedCategoryDetails,\n    // cachedBreadcrumbs,\n\n    // Methods\n    loadCategories,\n    loadCategoryTree,\n    loadCategoryById,\n    loadCategoryByUrlKey,\n    loadCategoryProducts,\n    loadChildCategories,\n    loadCategoryFilters,\n    loadFeaturedCategories,\n    searchCategoriesByName,\n    getCategoryBreadcrumbs,\n\n    // Utilities\n    clearError,\n  };\n};\n\n// Also keep the default export for backward compatibility\nexport default useCategory;\n"],"names":["CategoryPage","slug","useParams","getProductsByCategory","getProductFilters","contextLoading","contextError","useProduct","currentCategory","loadCategoryByUrlKey","getCategoryBreadcrumbs","loading","categoryDetailsLoading","error","categoryDetailsError","categories","setCategories","useState","categoryTree","setCategoryTree","setLoading","setError","setCurrentCategory","categoryProducts","setCategoryProducts","items","total_count","productFilters","setProductFilters","cachedCategoryDetails","setCachedCategoryDetails","cachedBreadcrumbs","setCachedBreadcrumbs","stateRef","useRef","current","loadCategories","useCallback","async","categoryApi.getAllCategories","err","message","loadCategoryTree","rootCategoryId","data","categoryApi.getCategoryTree","loadCategoryById","categoryId","categoryApi.getCategoryById","urlKey","cachedData","categoryApi.getCategoryByUrlKey","prev","loadCategoryProducts","categoryIdentifier","options","categoryApi.getProductsByCategory","categoryApi.getProductsByCategoryUrlKey","loadChildCategories","parentId","categoryApi.getChildCategories","loadCategoryFilters","categoryApi.getCategoryFilters","loadFeaturedCategories","limit","categoryApi.getFeaturedCategories","searchCategoriesByName","searchTerm","categoryApi.searchCategories","breadcrumbsData","categoryApi.getCategoryPath","map","cat","id","name","url","url_key","length","clearError","useCategory","displayedProducts","setDisplayedProducts","categoryAggregations","setCategoryAggregations","appliedFilters","setAppliedFilters","breadcrumbs","setBreadcrumbs","childCategories","setChildCategories","sortOption","setSortOption","sortDirection","setSortDirection","currentPage","setCurrentPage","pageSize","totalProducts","setTotalProducts","hasMore","setHasMore","loadingpop","setLoadingpop","useEffect","category","filters","breadcrumbData","children_data","fetchInitialCategoryData","attributeFilterGroups","useMemo","Object","entries","filter","values","attributeCode","priceValue","from","to","split","priceFilter","field","value","condition_type","group","fetchCategoryProducts","searchCriteriaForCategory","sortField","filterGroups","calculatedTotalPages","Math","ceil","firstProduct","lcpImageUrl","_a","image","_b","small_image","_c","thumbnail","preloadLink","document","getElementById","href","handleFilterChange","newValues","updatedFilters","handleSortChange","e","target","includes","direction","toUpperCase","handlePageChange","newPage","window","scrollTo","isLoadingInitial","displayError","LoadingSpinner","className","children","jsxs","jsx","Link","totalPages","jsxRuntimeExports","Fragment","Seo","title","description","keywords","meta_keywords","ogTitle","ogDescription","ogImage","ogUrl","location","origin","pathname","crumb","index","dangerouslySetInnerHTML","__html","child","product_count","ProductFilter","onFilterChange","htmlFor","onChange","product","ProductCard","isLCPCandidate","onClick","disabled","Array","_","pageNum"],"mappings":"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"}